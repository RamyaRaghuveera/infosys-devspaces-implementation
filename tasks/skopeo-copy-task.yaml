apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"tekton.dev/v1beta1","kind":"ClusterTask","metadata":{"annotations":{"tekton.dev/categories":"CLI","tekton.dev/displayName":"skopeo
      copy","tekton.dev/pipelines.minVersion":"0.12.1","tekton.dev/platforms":"linux/amd64,linux/s390x,linux/ppc64le,linux/arm64","tekton.dev/tags":"cli"},"labels":{"app.kubernetes.io/version":"0.2","operator.tekton.dev/operand-name":"openshift-pipelines-addons","operator.tekton.dev/provider-type":"redhat"},"name":"skopeo-copy","namespace":"openshift-pipelines","ownerReferences":[{"apiVersion":"operator.tekton.dev/v1alpha1","blockOwnerDeletion":true,"controller":true,"kind":"TektonInstallerSet","name":"addon-clustertasks-xwsbg","uid":"5908f598-1e9a-4e88-8a2a-60da4c43b0b4"}]},"spec":{"description":"Skopeo
      is a command line tool for working with remote image registries.\nSkopeo
      doesn’t require a daemon to be running while performing its operations. In
      particular, the handy skopeo command called copy will ease the whole image
      copy operation. The copy command will take care of copying the image from
      internal.registry to production.registry. If your production registry
      requires credentials to login in order to push the image, skopeo can
      handle that as well.","params":[{"default":"","description":"URL of the
      image to be copied to the destination
      registry","name":"srcImageURL","type":"string"},{"default":"","description":"URL
      of the image where the image from source should be copied
      to","name":"destImageURL","type":"string"},{"default":"true","description":"Verify
      the TLS on the src registry
      endpoint","name":"srcTLSverify","type":"string"},{"default":"true","description":"Verify
      the TLS on the dest registry
      endpoint","name":"destTLSverify","type":"string"}],"steps":[{"env":[{"name":"HOME","value":"/tekton/home"}],"image":"registry.redhat.io/rhel8/skopeo@sha256:5a83242e519a2b6e3387c3567ba799a94604be1b7d2e3cd134a631b9827c9762","name":"skopeo-copy","script":"#
      Function to copy multiple images.\n#\ncopyimages() {\n 
      filename=\"$(workspaces.images-url.path)/url.txt\"\n  while IFS= read -r
      line || [ -n \"$line\" ]\n  do\n    cmd=\"\"\n    for url in $line\n   
      do\n      # echo $url\n      cmd=\"$cmd \\\n          $url\"\n   
      done\n    skopeo copy \"$cmd\" --src-tls-verify=\"$(params.srcTLSverify)\"
      --dest-tls-verify=\"$(params.destTLSverify)\"\n    echo \"$cmd\"\n  done
      \u003c \"$filename\"\n}\n#\n# If single image is to be copied then, it can
      be passed through\n# params in the taskrun.\nif [
      \"$(params.srcImageURL)\" != \"\" ] \u0026\u0026 [
      \"$(params.destImageURL)\" != \"\" ] ; then\n  skopeo copy
      \"$(params.srcImageURL)\" \"$(params.destImageURL)\"
      --src-tls-verify=\"$(params.srcTLSverify)\"
      --dest-tls-verify=\"$(params.destTLSverify)\"\nelse\n  # If file is
      provided as a configmap in the workspace then multiple images can be
      copied.\n  #\n 
      copyimages\nfi\n","securityContext":{"runAsNonRoot":true,"runAsUser":65532}}],"workspaces":[{"name":"images-url"}]}}
    manifestival: new
    tekton.dev/categories: CLI
    tekton.dev/displayName: skopeo copy
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/platforms: 'linux/amd64,linux/s390x,linux/ppc64le,linux/arm64'
    tekton.dev/tags: cli
  resourceVersion: '4073936'
  name: skopeo-copy-task
  uid: 30e55e9d-5be0-42ba-a006-2fd370aaa612
  creationTimestamp: '2023-04-27T15:25:27Z'
  generation: 1
  managedFields:
    - apiVersion: tekton.dev/v1beta1
      fieldsType: FieldsV1
      fieldsV1:
        'f:metadata':
          'f:annotations':
            .: {}
            'f:kubectl.kubernetes.io/last-applied-configuration': {}
            'f:manifestival': {}
            'f:tekton.dev/categories': {}
            'f:tekton.dev/displayName': {}
            'f:tekton.dev/pipelines.minVersion': {}
            'f:tekton.dev/platforms': {}
            'f:tekton.dev/tags': {}
          'f:labels':
            .: {}
            'f:app.kubernetes.io/version': {}
            'f:operator.tekton.dev/operand-name': {}
            'f:operator.tekton.dev/provider-type': {}
        'f:spec':
          .: {}
          'f:description': {}
          'f:params': {}
          'f:steps': {}
          'f:workspaces': {}
      manager: Mozilla
      operation: Update
      time: '2022-12-02T07:00:50Z'
  namespace: cicd
  labels:
    app.kubernetes.io/version: '0.2'
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    operator.tekton.dev/provider-type: redhat
spec:
  description: >-
    Skopeo is a command line tool for working with remote image registries.

    Skopeo doesn’t require a daemon to be running while performing its
    operations. In particular, the handy skopeo command called copy will ease
    the whole image copy operation. The copy command will take care of copying
    the image from internal.registry to production.registry. If your production
    registry requires credentials to login in order to push the image, skopeo
    can handle that as well.
  params:
    - default: ''
      description: URL of the image to be copied to the destination registry
      name: srcImageURL
      type: string
    - default: ''
      description: URL of the image where the image from source should be copied to
      name: destImageURL
      type: string
    - default: 'false'
      description: Verify the TLS on the src registry endpoint
      name: srcTLSverify
      type: string
    - default: 'false'
      description: Verify the TLS on the dest registry endpoint
      name: destTLSverify
      type: string
    - default: 'http://148.64.4.164:8080'
      name: httpProxy
      type: string
    - default: 'http://148.64.4.164:8080'
      name: httpsProxy
      type: string
    - default: latest
      name: IMAGE_TAG
      type: string
    - default: latest
      name: APP_NAME
      type: string
    - default: >-
        localhost,bastion.mgmt.infyitapps.local,api.cloud.infyitapps.local,image-registry.openshift-image-registry.svc,.apps.cloud.infyitapps.local
      name: noProxy
      type: string
  steps:
    - env:
        - name: HOME
          value: /tekton/home
      image: >-
        registry.redhat.io/rhel8/skopeo@sha256:5a83242e519a2b6e3387c3567ba799a94604be1b7d2e3cd134a631b9827c9762
      name: skopeo-copy
      resources: {}
      script: >

        # Function to copy multiple images.

        # Function to copy multiple images.
         export http_proxy='$(params.httpProxy)'
         export https_proxy='$(params.httpsProxy)'
         export no_proxy='$(params.noProxy)'

         

        skopeo copy --all "docker://$(params.srcImageURL):$(params.IMAGE_TAG)" 
        "docker://$(params.destImageURL)/$(params.APP_NAME):$(params.IMAGE_TAG)"
        --src-tls-verify=$(params.srcTLSverify)
        --dest-tls-verify=$(params.destTLSverify) --debug
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
  workspaces:
    - name: images-url
