apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: scan-code
  namespace: cicd
spec:
  params:
    - default: 'docker.io/sonarsource/sonar-scanner-cli:latest' #quay.io/ibmgaragecloud/sonarsource-sonar-scanner-cli
      name: sonarqube-cli
      type: string
    - default: 'https://sonarqube-sonarqube.apps.cluster-4t99p.4t99p.sandbox2243.opentlc.com/'
      name: sonarqubeHostUrl
      type: string
    - name: git-url
    - name: git-revision
      default: master
    - name: app-name
      default: ''
    - name: source-dir
      default: /source
  volumes:
    - name: source
      emptyDir: {}
  steps:
    - name: git-clone
      image: quay.io/ibmgaragecloud/alpine-git
      env:
        - name: GIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: password
              optional: true
        - name: GIT_USERNAME
          valueFrom:
            secretKeyRef:
              name: git-credentials
              key: username
              optional: true
      script: |
        set +x
        if [[ -n "${GIT_USERNAME}" ]] && [[ -n "${GIT_PASSWORD}" ]]; then
            git clone "$(echo $(params.git-url) | awk -F '://' '{print $1}')://${GIT_USERNAME}:${GIT_PASSWORD}@$(echo $(params.git-url) | awk -F '://' '{print $2}')" $(params.source-dir)
        else
            set -x
            git clone $(params.git-url) $(params.source-dir)
        fi
        set -x
        cd $(params.source-dir)
        git checkout $(params.git-revision)
    - name: sonar-scan
      image: $(params.sonarqube-cli)
      workingDir: $(params.source-dir)
      env:
        - name: SONAR_USER_HOME
          value: $(params.source-dir)
        - name: SONARQUBE_URL
          valueFrom:
            secretKeyRef:
              name: sonarqube-access
              key: SONARQUBE_URL
              optional: true
        - name: SONARQUBE_USER
          valueFrom:
            secretKeyRef:
              name: sonarqube-access
              key: SONARQUBE_USER
              optional: true
        - name: SONARQUBE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sonarqube-access
              key: SONARQUBE_PASSWORD
              optional: true
      script: |
        APP_NAME=$(params.app-name)

        if ! command -v sonar-scanner &> /dev/null
        then
            echo "Skipping SonarQube step, no task defined"
            exit 0
        fi

        if [ -n "${SONARQUBE_URL}" ]; then

           sonar-scanner \
            -Dsonar.login=${SONARQUBE_USER} \
            -Dsonar.password=${SONARQUBE_PASSWORD} \
            -Dsonar.host.url=${SONARQUBE_URL} \
            -Dsonar.projectKey=${APP_NAME}

        else
            echo "Skipping Sonar Qube step"
        fi
